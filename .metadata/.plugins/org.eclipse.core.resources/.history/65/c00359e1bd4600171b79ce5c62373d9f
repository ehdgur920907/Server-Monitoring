package kr.or.connect.todo.service.persistence;

import java.util.Collections;
import java.util.List;
import java.util.Map;

import javax.sql.DataSource;

import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.jdbc.core.namedparam.BeanPropertySqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.jdbc.core.namedparam.SqlParameterSource;
import org.springframework.jdbc.core.simple.SimpleJdbcInsert;

import kr.or.connect.todo.service.Todo;

public class TodoDao {
	private NamedParameterJdbcTemplate jdbc;
	private SimpleJdbcInsert insert;
	private RowMapper<Todo> rowMapper = BeanPropertyRowMapper.newInstance(Todo.class);
	
	public TodoDao(DataSource dataSource) {
		this.jdbc = new NamedParameterJdbcTemplate(dataSource);
		this.insert = new SimpleJdbcInsert(dataSource).withTableName("todos").usingGeneratedKeyColumns("id");
	}
	
	public Integer insert(Todo todo) {
		SqlParameterSource params = new BeanPropertySqlParameterSource(todo);
		return insert.executeAndReturnKey(params).intValue();
	}
	public List<Todo> selectAll() {
		Map<String, Object> params = Collections.emptyMap();
		return jdbc.query(TodoSqls.SELECT_ALL, params, rowMapper);
	}
	
//	public List<Todo> selectAllAcitve(String active) {
//		System.out.println("dao select all active");
//		Map<String, Object> params = new HashMap<>();
//		params.put("active", active);
//		return jdbc.query(TodoSqls.SELECT_ALL_ACTIVE, params, rowMapper);
//	}
	
//	public List<Todo> selectAllCompleted(String completed) {
//		System.out.println("dao select all completed");
//		Map<String, Object> params = new HashMap<>();
//		params.put("active", completed);
//		return jdbc.query(TodoSqls.SELECT_ALL_COMPLETED, params, rowMapper);
//	}
//	
//	public int delete (String id) {
//		System.out.println("dao select all delete");
//		Map<String, ?> params = Collections.singletonMap("id", id);
//		return jdbc.update(TodoSqls.DELETE, params);
//	}
}
