package com.client.netty;

import org.json.simple.JSONObject;

import com.information.get.GetMemory;
import com.information.get.Memory;

import io.netty.buffer.ByteBuf;
import io.netty.buffer.Unpooled;
import io.netty.channel.ChannelHandlerContext;
import io.netty.channel.ChannelInboundHandlerAdapter;

public class EchoClientHandler extends ChannelInboundHandlerAdapter {
	@Override
	public void channelActive(ChannelHandlerContext ctx) {
		System.out.println("1");
		System.out.println("channelActive");
		GetMemory getMemory = new GetMemory();
		Memory memory = getMemory.getMemory();
		
		JSONObject memoryJsonObject = new JSONObject();
		
		memoryJsonObject.put("totalMemory", memory.getTotalMemory());
		memoryJsonObject.put("usedMemory", memory.getUsedMemory());
		memoryJsonObject.put("freeMemory", memory.getFreeMemory());
		
		System.out.println(memoryJsonObject);
		
		ByteBuf messageBuffer = Unpooled.buffer();
		messageBuffer.writeBytes(memoryJsonObject.toJSONString().getBytes());

		ctx.writeAndFlush(messageBuffer);
	}

	@Override
	public void channelRead(ChannelHandlerContext ctx, Object msg) {
		ctx.close();
	}
	
	@Override
	public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) {
		cause.printStackTrace();
		ctx.close();
	}

}
