package com.server.netty;

import java.io.InputStream;
import java.nio.charset.Charset;

import org.apache.ibatis.io.Resources;
import org.apache.ibatis.session.SqlSessionFactory;
import org.apache.ibatis.session.SqlSessionFactoryBuilder;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

import com.information.dao.MemoryDAO;
import com.information.get.Memory;

import io.netty.buffer.ByteBuf;
import io.netty.channel.ChannelHandlerContext;
import io.netty.channel.ChannelInboundHandlerAdapter;

public class EchoServerHandler extends ChannelInboundHandlerAdapter {
//	
//	public void insert(){
//		String resource = "com/mybatis/config/mybatis-config.xml";
//		InputStream inputStream = Resources.getResourceAsStream(resource);
//		SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream);
//	}
	
	@Override
	public void channelRead(ChannelHandlerContext ctx, Object msg) throws ParseException {
		String readMessage = ((ByteBuf) msg).toString(Charset.defaultCharset());
		
		MemoryDAO  memoryDAO = new MemoryDAO();
		Memory memory = new Memory();
		
		
		JSONParser parser = new JSONParser();
	    JSONObject json = (JSONObject)parser.parse(readMessage);
	    memory.setFreeMemory(json.get("totalMemory").toString());
	    memory.setTotalMemory(json.get("totalMemory").toString());
	    memory.setUsedMemory(json.get("freeMemory").toString());
		userServiceImpl.insertCpu(cpu);
	    System.out.println(json.get("totalMemory"));
	    System.out.println(json.get("usedMemory"));
	    System.out.println(json.get("freeMemory"));
	}

	@Override
	public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception {
		cause.printStackTrace();
		ctx.close();
	}
}